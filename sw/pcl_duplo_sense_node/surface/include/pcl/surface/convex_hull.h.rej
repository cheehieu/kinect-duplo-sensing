--- surface/include/pcl/surface/convex_hull.h	(revision 2514)
+++ surface/include/pcl/surface/convex_hull.h	(working copy)
@@ -82,9 +82,10 @@
       typedef typename PointCloud::ConstPtr PointCloudConstPtr;
 
       /** \brief Empty constructor. */
-      ConvexHull ()
+      ConvexHull () : total_area_(0), total_volume_(0)
       {
         keep_information_ = false;
+        compute_area_ = false;
       };
 
       /** \brief Compute a convex hull for all points given 
@@ -105,7 +106,7 @@
 
       /** \brief If keep_information_is set to true the convex hull
         * points keep other information like rgb, normals, ...
-        * \param value where to keep the information or not, default is false
+        * \param value whether to keep information or not, default is false
         */
       void
       setKeepInformation (bool value)
@@ -113,6 +114,30 @@
         keep_information_ = value;
       }
 
+      /** \brief If set to true, the qhull is called to compute the total area and volume of the convex hull.
+        * \param value wheter to compute the area and the volume, default is false
+        */
+      void
+      setComputeAreaVolume (bool value) {
+        compute_area_ = value;
+      }
+
+      /** \brief Returns the total area of the convex hull.
+        */
+      double
+      getTotalArea ()
+      {
+        return total_area_;
+      }
+
+      /** \brief Returns the total volume of the convex hull. Only valid for 3-dimensional sets.
+        */
+      double
+      getTotalVolume ()
+      {
+        return total_volume_;
+      }
+
     private:
       /** \brief The actual reconstruction method. 
         * 
@@ -127,6 +152,9 @@
                              bool fill_polygon_data = false);
 
       bool keep_information_;
+      bool compute_area_;
+      double total_area_;
+      double total_volume_;
 
     protected:
       /** \brief Class get name method. */
